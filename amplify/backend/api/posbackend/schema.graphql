type Discounts @model @auth(rules: [{allow: public}]) {
  id: ID!
  nam: String
  code: String
  percentage: String
}

type ProductsOrdered {
  id: String
  notes: String
  qty: Int
  price: Float
  status: Status
  name: String
  category: ID
  remaing: Int
}

type Ingredient @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  qty: Int
  products: [Product] @manyToMany(relationName: "ProductIngredient")
}

type Category @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  Products: [Product] @hasMany(indexName: "byCategory", fields: ["id"])
}

type Product @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  price: Float
  image: String
  description: String
  categoryID: ID! @index(name: "byCategory")
  Ingredients: [Ingredient] @manyToMany(relationName: "ProductIngredient")
}

type Table @model @auth(rules: [{allow: public}]) {
  id: ID!
  full: Boolean
  number: Int
  seats: String
  Orders: [Order] @hasMany(indexName: "byTable", fields: ["id"])
  currentOrder: String
}

enum Status {
  CREATED
  ORDERED
  PREPARED
  PAID
  CANCELLED
}

type Order @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  total: Float
  status: Status
  tableID: ID! @index(name: "byTable")
  products: [ProductsOrdered]
  paymentId: String
  mesero: String
}
 